spring:
  profiles:
    active: development
---
spring:
  profiles: development
  neo4j:
    host: ${NEO4J_SERVICE_HOST:localhost}
    port: ${NEO4J_SERVICE_PORT:7474}
  rabbitmq:
    host: 192.168.99.100
    port: 5672    
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 7002	  
---
spring:
  profiles: docker
  neo4j:
    host: ${SPRING_NEO4J_HOST:neo4j}
    port: ${SPRING_NEO4J_PORT:7474}
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
server:
  port: 7002	  
---
spring:
  profiles: cloud
  neo4j:
    host: ${NEO4J_SERVICE_HOST:localhost}
    port: ${NEO4J_SERVICE_PORT:7474}  
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service-peer1/eureka/,http://discovery-service-peer2/eureka/
#http://${DISCOVERY_SERVICE_PEER1_SERVICE_HOST}:${DISCOVERY_SERVICE_PEER1_SERVICE_PORT}/eureka/,http://${DISCOVERY_SERVICE_PEER2_SERVICE_HOST}:${DISCOVERY_SERVICE_PEER2_SERVICE_PORT}/eureka/
server:
  port: 8080
---
spring:
  profiles: test
  neo4j:
    host: ${NEO4J_SERVICE_HOST:localhost}
    port: ${NEO4J_SERVICE_PORT:7474}
eureka:
  client:
    enabled: false
server:
  port: 7002